version: '3.7'

services:
  # enginx proxy
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - cert:/etc/nginx/certs
      - html:/usr/share/nginx/html
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  
  # lets encrypt
  letsencrypt-nginx:
    image: jrcs/letsencrypt-nginx-proxy-companion:2.1
    container_name: lets
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - cert:/etc/nginx/certs:rw
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
  
  web:
    container_name: flask2_web
    build: 
      context: ./build/web
      dockerfile: ./Dockerfile
      # 引数を渡す
      #args:
      #  - EMAIL_ADDRESS=${EMAIL_ADDRESS}
    volumes:
      #- ./build/web/nginx.conf:/etc/nginx/nginx.conf
      #- ./build/web/nginx.conf_production:/etc/nginx/nginx.conf_production
      #- ./build/web/nginx.conf_development:/etc/nginx/nginx.conf_development
      # nginxのログをホストOSの /tmp/nginx_log に出力する
      - ./build/web/nginx_log:/var/log/nginx
      # challenge用
      - html:/usr/share/nginx/challenge
    # 環境変数読み込み
    env_file:
      - ./secret/.env
    #ports:
    #  - "4231:80"
    environment:
      TZ: "Asia/Tokyo"
    # 依存関係
    depends_on:
      - letsencrypt-nginx  

  app:
    container_name: flask2
    # Dockerfileの存在するディレクトリを指定
    build: 
      context: ./build/app
      dockerfile: ./Dockerfile
      args:
          project_dir: "/var/www/ConvertImageToExcel/"
    # ポートフォワーディング設定
    ports: 
      - "3031:3031" # uwsgi
    # リンク
    links:
      - db
    # データの永続化
    volumes:
      - ".:/var/www/ConvertImageToExcel"
    # 環境変数の設定
    environment:
      TZ: Asia/Tokyo
      FLASK_ENV: "produciton"
    #ファイルから環境変数設定
    env_file:
      - ./secret/.env
    # 起動したままにする
    # tty: true
  
  db:
    container_name: flask2_db
    image: mysql:5.7
    # 環境変数読み込み
    env_file:
      - ./secret/.env
    environment:
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./build/db/data:/var/lib/mysql
      - ./build/db/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

# ボリュームの永続化
volumes:
  cert:
  vhost:
  html:
